// Instructions: Write queries to get the following pieces of information.
// Answers:


use sample

// In the posts collection, find the most common tag
db.posts.aggregate([{
	"$unwind" : "$tags"
}, {
	"$group" : {
		"_id" : { "tags" : "$tags" },
		"posts" : {"$sum" : 1}
	}
}, {
	"$sort" : { "posts" : -1}
}, {
	"$limit" : 1
}])

// Find how many inspections in Jamaica failed per zip code,
// sort from the most failures to the least failures
db.inspections.aggregate([{"$project" : { 
		"_id" : 1,
		"zip" : "$address.zip",
		"address.city" : {
			"$toUpper" : "$address.city"
		},
		"fail" : {
			"$toInt" : { "$eq" : [ "$result", "Fail" ] }
		}
	}
}, {
	"$match" : {
		"address.city" : "JAMAICA"
	}
}, {
	"$group" : {
		"_id" : "$zip",
		"count" : {"$sum" : "$fail"}
	}
}, {
	"$sort" : { "count" : -1 }
}])


// Find the average viewcount of popular stories in the stories
// collection per media type.
db.stories.aggregate([{
	"$match" : {"status" : "popular"}
}, {
	"$unwind" : "$shorturl"
}, {
	"$group" : {
		"_id" : { "media" : "$media" },
		"avgViewcount" : { "$avg" : "$shorturl.view_count" }
	}
}])

// In the tweets collection, find the users who are 
// mentioned the most.
db.tweets.aggregate([{
	"$unwind" : "$entities.user_mentions"
}, {
	"$group" : {
		"_id" : {"user" : "$entities.user_mentions.screen_name"},
		"mentions" : {"$sum" : 1}
	}
}, {
	"$sort" : {"mentions" : -1}
}])

// In the movies collection, find the actor/actress with the most
// highly rated movies based on tomatoes rating.

db.movies.aggregate([{
	"$project" : {
		"_id" : 1,
		"cast" : 1,
		"rating" : "$tomatoes.viewer.rating"
	}
}, {
	"$unwind" : "$cast"
}, {
	"$group" : {
		"_id" : "$cast",
		"avg_rating" : { "$avg" : "$rating" }
	}
}, {
	"$sort" : { "_id" : 1 }
}, {
	"$group" : {
		"_id" : "$avg_rating",
		"actor_list" : { "$push" : "$_id" }
	}
}, {
	"$sort" : { "_id" : -1 }
}, {
	"$limit" : 1
}, {
	"$project" : {
		"_id" : 0,
		"actor_list" : 1
	}
}])